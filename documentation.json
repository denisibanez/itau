{
    "pipes": [],
    "interfaces": [
        {
            "name": "LoaderStateModel",
            "id": "interface-LoaderStateModel-1caeb826b88efbf8d44349555eb4be1d03919a466e6f6249ba5a3fb4a7bf85a9851273602e47000db1438de3077c19ed041ddd381fd755a920f8e94d7dab5f78",
            "file": "src/app/store/loading/loading.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { ChangeLoaderState } from './loading.actions';\n\nexport interface LoaderStateModel {\n  loading: boolean;\n}\n\n@State<LoaderStateModel>({\n  name: 'loading',\n  defaults: {\n    loading: false,\n  },\n})\n@Injectable()\nexport class LoaderState {\n  @Action(ChangeLoaderState)\n  async changeLoaderState(\n    ctx: StateContext<LoaderStateModel>,\n    action: ChangeLoaderState\n  ) {\n    const { loading } = await action;\n\n    ctx.setState({\n      loading: loading,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SnackbarStateModel",
            "id": "interface-SnackbarStateModel-7e43b2a6adf99f8f82d26bfee5d38be59d46f505c15520439214dc6db5bb3cd0a55850513b92054c0e5255d35cc91712ea712aeb7cd6e924b166a03468b9de7e",
            "file": "src/app/store/snackbar/snackbar.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { ChangeSnackbarState } from './snackbar.actions';\n\nexport interface SnackbarStateModel {\n  snackbar: any;\n}\n\n@State<SnackbarStateModel>({\n  name: 'snackbar',\n  defaults: {\n    snackbar: null,\n  },\n})\n@Injectable()\nexport class SnackbarState {\n  @Action(ChangeSnackbarState)\n  async changeSnackbarState(\n    ctx: StateContext<SnackbarStateModel>,\n    action: ChangeSnackbarState\n  ) {\n    const { snackbar } = await action;\n\n    ctx.setState({\n      snackbar: snackbar,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "snackbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ExampleHttpService",
            "id": "injectable-ExampleHttpService-841347c169e47156fa895894d5cd0b991f2b8f15b20df0ca7a2b79f92bef01d091b5105a82ea013f932190e473befa4f3b90d94fb13b1a561e64bcf93a70f281",
            "file": "src/app/services/httpRequest/example-http.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "'https://randomuser.me/api/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "exampleHttp",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExampleHttpService {\n  baseUrl = 'https://randomuser.me/api/';\n\n  constructor(private http: HttpClient) {}\n\n  exampleHttp() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoaderState",
            "id": "injectable-LoaderState-1caeb826b88efbf8d44349555eb4be1d03919a466e6f6249ba5a3fb4a7bf85a9851273602e47000db1438de3077c19ed041ddd381fd755a920f8e94d7dab5f78",
            "file": "src/app/store/loading/loading.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "changeLoaderState",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<LoaderStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "ChangeLoaderState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "ChangeLoaderState"
                        }
                    ],
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<LoaderStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ChangeLoaderState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { ChangeLoaderState } from './loading.actions';\n\nexport interface LoaderStateModel {\n  loading: boolean;\n}\n\n@State<LoaderStateModel>({\n  name: 'loading',\n  defaults: {\n    loading: false,\n  },\n})\n@Injectable()\nexport class LoaderState {\n  @Action(ChangeLoaderState)\n  async changeLoaderState(\n    ctx: StateContext<LoaderStateModel>,\n    action: ChangeLoaderState\n  ) {\n    const { loading } = await action;\n\n    ctx.setState({\n      loading: loading,\n    });\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "SnackbarState",
            "id": "injectable-SnackbarState-7e43b2a6adf99f8f82d26bfee5d38be59d46f505c15520439214dc6db5bb3cd0a55850513b92054c0e5255d35cc91712ea712aeb7cd6e924b166a03468b9de7e",
            "file": "src/app/store/snackbar/snackbar.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "changeSnackbarState",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<SnackbarStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "ChangeSnackbarState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "ChangeSnackbarState"
                        }
                    ],
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<SnackbarStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ChangeSnackbarState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { ChangeSnackbarState } from './snackbar.actions';\n\nexport interface SnackbarStateModel {\n  snackbar: any;\n}\n\n@State<SnackbarStateModel>({\n  name: 'snackbar',\n  defaults: {\n    snackbar: null,\n  },\n})\n@Injectable()\nexport class SnackbarState {\n  @Action(ChangeSnackbarState)\n  async changeSnackbarState(\n    ctx: StateContext<SnackbarStateModel>,\n    action: ChangeSnackbarState\n  ) {\n    const { snackbar } = await action;\n\n    ctx.setState({\n      snackbar: snackbar,\n    });\n  }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-2f3e4a4844bc85c5244d8f6ee2d4183530f3d3381b27ac2511799d7bfe180c774f8c151aa921ca561cd07574726ad3978a49703a3c1d0d5005dbe35f1b1f27f5",
            "file": "src/app/router/guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor() {}\n\n  canActivate() {\n    // remove true before integration\n    const currentUser = localStorage.getItem('ACCESS_TOKEN');\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    let storage: any = localStorage.getItem('token') || null;\n    storage = storage ? JSON.parse(storage) : null;\n    location.replace(`/login`);\n    return false;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "HttpInterceptorAuth",
            "id": "injectable-HttpInterceptorAuth-34bddfb979f0b7afdbc7e7a7953041c40920bb4db2b939ae3b20ddbd474e261ecb9a640d46576519a4e2a8398bb15a6201ef93c2dedb1c45ae36b6401d52ed58",
            "file": "src/app/services/httpRequest/interceptor/success-interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { getCookie } from '../../../utils/GetTokenCookie.utils';\n\n@Injectable()\nexport class HttpInterceptorAuth implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const ACCESS_TOKEN =\n      getCookie('ACCESS_TOKEN') || localStorage.getItem('ACCESS_TOKEN');\n    console.log(ACCESS_TOKEN);\n    const requestUrl = request.url.split('/');\n    console.log(requestUrl);\n\n    // if have token (logged in)\n    if (ACCESS_TOKEN) {\n      // if you like bypass use requestUrl.includes('PART_OF_REQUEST')\n\n      // if request is refresh token\n      request = request.clone({\n        setHeaders: { Authorization: ACCESS_TOKEN },\n      });\n    }\n\n    // if not have token (not Logged in)\n    return next.handle(request);\n  }\n}\n",
            "type": "interceptor"
        },
        {
            "name": "HttpInterceptorError",
            "id": "injectable-HttpInterceptorError-668753a64e26767a635ce0383dd5d32c70025d2bff5d6831b5b55add0f5e20f2b3e47dfad27bd1894a82a562d110553044d2834e3f55e8bf5e92e5580a226b7c",
            "file": "src/app/services/httpRequest/interceptor/error-interceptor.ts",
            "properties": [
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable()\nexport class HttpInterceptorError implements HttpInterceptor {\n  constructor(public router: Router) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // console.log('error interceptor')\n\n    return next.handle(request).pipe(\n      catchError((err) => {\n        // console.log(err, 'err')\n        if (err.status === 403 || err.status === 401) {\n          location.replace(environment.redirectLogin);\n        }\n        return throwError(() => err);\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "ChangeLoaderState",
            "id": "class-ChangeLoaderState-acae2cb3ebd559bb1bc7c46aa1cb90fa6bae056e9cb8f612a91566f956cd61fb34320e517beab5cff7fe593151ade67894475805e4ad4534143e47b68f1e2e9c",
            "file": "src/app/store/loading/loading.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ChangeLoaderState {\n  static readonly type = '[Loader state] Change Loader State';\n  constructor(public loading: boolean) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loading",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "loading",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Loader state] Change Loader State'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        124,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ChangeSnackbarState",
            "id": "class-ChangeSnackbarState-7201adc81bbb67914829c62614a266ce857075d09f99d30baa1e63c1c964e3968fff83dfe030f3e737e65f3ff181c689d3875fb7fad047b843eaee08dbeefe60",
            "file": "src/app/store/snackbar/snackbar.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ChangeSnackbarState {\n  static readonly type = '[Snackbar state] Change Snackbar State';\n  constructor(public snackbar: any) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbar",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "snackbar",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "snackbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Snackbar state] Change Snackbar State'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        124,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ExampleService",
            "id": "class-ExampleService-5f854d6b91d0a873704df39fde899ce1c5e05d12ad65c2cb451f1501d153cb12dfd0b0db5bcaae6745540e3cae18019bfb8626b24419a7b8a942514b181099b1",
            "file": "src/app/services/axios/example/example.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import request from '../plugins/request';\nexport class ExampleService {\n  async random(payload: any, success: any, error: any, done: any) {\n    const req: any = {\n      method: 'get',\n      url: `https://randomuser.me/api/${payload}`,\n    };\n    return await request(req, success, error, done);\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "random",
                    "args": [
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "success",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "done",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "success",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "done",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LoaderSelectors",
            "id": "class-LoaderSelectors-3e77e04296fcb8b062f3f920278074ecc36eec66a4ac467d5ac0aca5b74cc434eb1543840546c9c5bf47cc452f48181cada1564f9a89fe4c4ee6b923f4bd0968",
            "file": "src/app/store/loading/loading.selectors.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { LoaderState, LoaderStateModel } from './loading.state';\n\nexport class LoaderSelectors {\n  @Selector([LoaderState])\n  static loader(state: LoaderStateModel): boolean {\n    return state.loading;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "loader",
                    "args": [
                        {
                            "name": "state",
                            "type": "LoaderStateModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "['LoaderState']"
                        }
                    ],
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "LoaderStateModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SnackbarSelectors",
            "id": "class-SnackbarSelectors-383695a68f94571d3f30dbb237e3a054f0b3cfef3d4e2e2615c94f6a9867903540722905716c3f65f960a6be3b6066d23424a23be0baadbedc6b77818558e221",
            "file": "src/app/store/snackbar/snackbar.selectors.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Selector } from '@ngxs/store';\nimport { SnackbarState, SnackbarStateModel } from './snackbar.state';\n\nexport class SnackbarSelectors {\n  @Selector([SnackbarState])\n  static snackbar(state: SnackbarStateModel): boolean {\n    return state.snackbar;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "snackbar",
                    "args": [
                        {
                            "name": "state",
                            "type": "SnackbarStateModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": "['SnackbarState']"
                        }
                    ],
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "SnackbarStateModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e94c63454d67ff630808dff3f870f04b838030733babea09db093760d212379febbba0ee085fac5f2ab55afe15c6863654d454acf62e69215e47a426de7f1663",
            "file": "src/app/views/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Autorização de alçadas'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Autorização de alçadas';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'https://cdn.jsdelivr.net/npm/bootstrap-v4-grid-only@1.0.0/dist/bootstrap-grid.min.css';\n\n*,\n*:after,\n*:before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  text-decoration: none;\n}\n\nbody {\n  background-color: #f4f6f9;\n}\n/* You can add global styles to this file, and also import other style files */\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f10b070a16f09cf2cc9f4f3d6e000fba1c2039b509e364fe836b6b64fba0610033938c03a0e355c5773fc3fc9e7298f44b5e3e4a1bc9de19b40eab8cecb4cf16",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"btnClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 722,
                            "end": 735,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 723,
                                "end": 731,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "btnClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"btnClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n    primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n    backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n    size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n    label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n    btnClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary\n      ? 'storybook-button--primary'\n      : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CustomLoaderComponent",
            "id": "component-CustomLoaderComponent-deabd75f7f0e90c12e1567a25d1299333572a8fcb4f7cdab1391ea1bf0aea0ec9bcf9c65c124dd451b6bf007f32c457f6f620a94ce160e22108c4801bdffc5ee",
            "file": "src/app/components/custom-loader/custom-loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-loader",
            "styleUrls": [
                "./custom-loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "brand",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n\n@Component({\n  selector: 'app-custom-loader',\n  templateUrl: './custom-loader.component.html',\n  styleUrls: ['./custom-loader.component.scss']\n})\nexport class CustomLoaderComponent implements OnInit {\n  @Input() brand: string = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#customLoaderComponent__wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n\r\n  img {\r\n    margin-top: 25px;\r\n    max-width: 400px;\r\n  }\r\n\r\n  ::ng-deep.mat-progress-spinner {\r\n    width: 75px !important;\r\n    height: 75px !important;\r\n\r\n    svg {\r\n      width: 75px !important;\r\n      height: 75px !important;\r\n    }\r\n  }\r\n}\r\n\r\n@media(max-width: 991px) {\r\n  #customLoaderComponent__wrapper  {\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./custom-loader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"customLoaderComponent__wrapper\">\n  <mat-spinner></mat-spinner>\n\n  <img [src]=\"brand\" />\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3e96327492368bf0e8030190052190b2c863c8d5b4cb28b2a63e59752ae4579cbb74ef7206842f483cf536d67f028d2695a955df5ec2ace9dd44f8a683fd099f",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"methodLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"methodLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"methodCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "methodCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "methodLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "methodLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'app-storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"methodLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"methodLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"methodCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n    user: User | null = null;\n\n  @Output()\n    methodLogin = new EventEmitter<Event>();\n\n  @Output()\n    methodLogout = new EventEmitter<Event>();\n\n  @Output()\n    methodCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-fa2aa27e4139e9793b910068b910e321596a2d195bfa0fd7b8f5f3b804a9b0685cdd9f1a71b7fbe6a9f73526113a68baf80e312c4440dab15890fd39dc4c0aac-1",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<p>header works!</p>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-388a2023eb4a7cbe9c8cedf932985d31fc28d3eb273ce12f0987f01cea66fe70ba47c0abee58e561eb1634e087e7b5eee11d78b4f3b425cc20ef018f230a1a04",
            "file": "src/app/views/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ExampleHttpService"
                }
            ],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chargeLoader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "load$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "LoaderSelectors.loader"
                        }
                    ]
                },
                {
                    "name": "snackbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "snackbar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "SnackbarSelectors.snackbar"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getExample",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getExampleHttp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n// Services\nimport { ExampleService } from '../../services/axios';\nimport { ExampleHttpService } from '../../services/httpRequest/example-http.service';\n\n// Store\nimport { Select, Store } from '@ngxs/store';\nimport { LoaderSelectors } from '../../store/loading/loading.selectors';\nimport { SnackbarSelectors } from '../../store/snackbar/snackbar.selectors';\nimport { Observable } from 'rxjs';\nimport { ChangeLoaderState } from '../../store/loading/loading.actions';\nimport { ChangeSnackbarState } from '../../store/snackbar/snackbar.actions';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  providers: [ExampleHttpService],\n})\nexport class HomeComponent implements OnInit {\n  @Select(LoaderSelectors.loader) load$!: Observable<boolean>;\n  @Select(SnackbarSelectors.snackbar) snackbar$!: Observable<any>;\n\n  public chargeLoader!: boolean;\n  public snackbar!: boolean;\n\n  constructor(private store: Store, private exampleServices: ExampleService,  private exampleHttpService: ExampleHttpService) {}\n\n  ngOnInit(): void {\n    this.load$.subscribe((u) => {\n      this.chargeLoader = u;\n    });\n\n    this.getExample();\n    this.getExampleHttp();\n  }\n\n  async getExample(): Promise<void> {\n    const payload = '';\n    this.store.dispatch(new ChangeLoaderState(true));\n    await this.exampleServices.random(\n      payload,\n      (r: any) => {\n        console.log(r.data);\n        this.store.dispatch(\n          new ChangeSnackbarState({\n            duration: 5000,\n            icon: 'warning',\n            theme: 'success-theme',\n            message: 'Esse é um exemplo!',\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            show: true,\n          })\n        );\n      },\n      (e: any) => {\n        console.log(e);\n      },\n      () => {\n        this.store.dispatch(new ChangeLoaderState(false));\n      }\n    );\n  }\n\n  getExampleHttp() {\n    this.exampleHttpService.exampleHttp().subscribe({\n      next: (response) => {\n        console.log(response, 'http');\n        this.store.dispatch(\n          new ChangeSnackbarState({\n            duration: 5000,\n            icon: 'fa fa-check-circle',\n            theme: 'success-theme',\n            message: 'Requisição sucesso',\n            horizontalPosition: 'bottom',\n            verticalPosition: 'center',\n            show: true,\n          })\n        );\n      },\n      error: (error) => {\n        console.log(error);\n        this.store.dispatch(\n          new ChangeSnackbarState({\n            duration: 5000,\n            icon: 'fa-light fa-trash-can',\n            theme: 'error-theme',\n            message: 'Requisição falhou!',\n            horizontalPosition: 'bottom',\n            verticalPosition: 'center',\n            show: true,\n          })\n        );\n      },\n    });\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// GLOBAL\n@import '../../../assets/scss/_main.scss';\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "exampleServices",
                        "type": "ExampleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "exampleHttpService",
                        "type": "ExampleHttpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "exampleServices",
                        "type": "ExampleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "exampleHttpService",
                        "type": "ExampleHttpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"!chargeLoader\" class=\"app__wrapper\">\n  <p>Home works!</p>\n</div>\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-c97b7615846cca5c8762d27918b591646bfa57b7734b5badbe0a0006f9f489dc6cc421ed013414361627897618ab637f79aa0b269471980472aa72f323247161",
            "file": "src/app/views/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chargeLoader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "load$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "LoaderSelectors.loader"
                        }
                    ]
                },
                {
                    "name": "snackbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "snackbar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "SnackbarSelectors.snackbar"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n// Store\nimport { Select } from '@ngxs/store';\nimport { LoaderSelectors } from '../../store/loading/loading.selectors';\nimport { SnackbarSelectors } from '../..//store/snackbar/snackbar.selectors';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  @Select(LoaderSelectors.loader) load$!: Observable<boolean>;\n  @Select(SnackbarSelectors.snackbar) snackbar$!: Observable<any>;\n\n  public chargeLoader!: boolean;\n  public snackbar!: any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.load$.subscribe((u) => {\n      this.chargeLoader = u;\n    });\n\n    this.snackbar$.subscribe((u) => {\n      this.snackbar = u;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// GLOBAL\n@import '../../../assets/scss/_main.scss';\n",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Loader -->\r\n<div *ngIf=\"chargeLoader\">\r\n  <app-custom-loader [brand]=\"'https://logodownload.org/wp-content/uploads/2019/12/itau-bba-logo-1.png'\"></app-custom-loader>\r\n</div>\r\n\r\n<!-- Header -->\r\n<app-header\r\n  *ngIf=\"!chargeLoader\"\r\n>\r\n</app-header>\r\n\r\n<div class=\"app__content\">\r\n  <!-- Pages -->\r\n  <div class=\"app__content--wrapper\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n<!-- Snackbar -->\r\n<app-snackbar\r\n  *ngIf=\"snackbar\"\r\n  [duration]=\"snackbar.duration\"\r\n  [icon]=\"snackbar.icon\"\r\n  [theme]=\"snackbar.theme\"\r\n  [message]=\"snackbar.message\"\r\n  [horizontalPosition]=\"snackbar.horizontalPosition\"\r\n  [verticalPosition]=\"snackbar.verticalPosition\"\r\n  [show]=\"snackbar.show\"\r\n>\r\n</app-snackbar>"
        },
        {
            "name": "NotfoundComponent",
            "id": "component-NotfoundComponent-d407075fb492709d6754775fff1eff4c4688859c134062bfb91a4e731a948b11bd9cb52cf618d13e164caa17dc30e7e15e903ab1562de839f6aa82ad4e9b52aa",
            "file": "src/app/views/notfound/notfound.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notfound",
            "styleUrls": [
                "./notfound.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notfound.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss'],\n})\nexport class NotfoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('teste');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// GLOBAL\n@import '../../../assets/scss/_main.scss';\n",
                    "styleUrl": "./notfound.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>notfound works!</p>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-327ecdc74c8161a6fe1f6c3d1edca7691d08fbecc5ed3f7e722aa59a9eaf7e768aa2deed90c268f88b03efef526fc6efc0a80ab1f8c78db811cad13345e3a38f",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'app-storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SnackbarComponent",
            "id": "component-SnackbarComponent-0fe8258e2cb30a84d9cf8d089af97fd48a4e541793ac0865259229662886759db7113544e7fc4c4ac8e1eff8534ab4abf7014a5b4db3e1fa95098d8dfb988716",
            "file": "src/app/components/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [
                "./snackbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snackbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "defaultValue": "5000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "horizontalPosition",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "MatSnackBarHorizontalPosition",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'fa fa-check-circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Sua mensagem aqui'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'success-theme'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "verticalPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "MatSnackBarVerticalPosition",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "snackBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSnackBar",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openSnackBar",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "horizontalPosition",
                            "type": "MatSnackBarHorizontalPosition",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "verticalPosition",
                            "type": "MatSnackBarVerticalPosition",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "horizontalPosition",
                            "type": "MatSnackBarHorizontalPosition",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "verticalPosition",
                            "type": "MatSnackBarVerticalPosition",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, Inject } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n  MAT_SNACK_BAR_DATA,\r\n} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.scss']\r\n})\r\nexport class SnackbarComponent implements OnChanges {\r\n  @Input() show: boolean = false;\r\n  @Input() message: string = 'Sua mensagem aqui';\r\n  @Input() theme: string = 'success-theme';\r\n  @Input() icon: string = 'fa fa-check-circle';\r\n  @Input() duration: number = 5000;\r\n  @Input() horizontalPosition: MatSnackBarHorizontalPosition = 'center';\r\n  @Input() verticalPosition: MatSnackBarVerticalPosition = 'bottom';\r\n\r\n  constructor(public snackBar: MatSnackBar) { }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.show) this.openSnackBar(\r\n      this.message,\r\n      this.duration,\r\n      this.theme,\r\n      this.icon,\r\n      this.horizontalPosition,\r\n      this.verticalPosition\r\n    )\r\n  }\r\n\r\n  openSnackBar(\r\n    message: string,\r\n    duration: number,\r\n    theme: string,\r\n    icon: string,\r\n    horizontalPosition: MatSnackBarHorizontalPosition,\r\n    verticalPosition: MatSnackBarVerticalPosition\r\n  ) {\r\n   this.snackBar.openFromComponent(SnackbarSlotComponent, {\r\n      duration,\r\n      panelClass: theme,\r\n      horizontalPosition,\r\n      verticalPosition,\r\n      data: {\r\n        message,\r\n        icon,\r\n        preClose: () => { this.snackBar.dismiss() }\r\n      }\r\n    });\r\n }\r\n}\r\n@Component({\r\n  selector: 'app-snack-bar-component-slot',\r\n  templateUrl: 'snack-bar-component-slot.html',\r\n  template: '{{ data }}',\r\n  styleUrls: ['./snackbar.component.scss'],\r\n})\r\nexport class SnackbarSlotComponent {  \r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  close() {\r\n    this.data.preClose()\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/scss/main';\r\n\r\n::ng-deep.mat-snack-bar-container {\r\n  max-width: 100% !important;\r\n  height: 56px !important;\r\n  border-radius: 5px;\r\n}\r\n  \r\n.snackbar {\r\n  &__slot {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    > div {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  &__slot--message {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  &__slot--action {\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n::ng-deep.success-theme,\r\n::ng-deep.error-theme,\r\n::ng-deep.info-theme,\r\n::ng-deep.warn-theme {\r\n  @include font-format(\r\n    $weight: 600,\r\n    $line-height: 24px,\r\n    $color: $white,\r\n    $size: 16px,\r\n  )\r\n}\r\n\r\n::ng-deep.success-theme {\r\n  background: #148735;\r\n}\r\n\r\n::ng-deep.error-theme {\r\n  background: $error;\r\n}\r\n\r\n::ng-deep.warn-theme {\r\n  background: #F19718;\r\n  \r\n}\r\n\r\n::ng-deep.info-theme {\r\n  background: $primary;\r\n}\r\n",
                    "styleUrl": "./snackbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": ""
        },
        {
            "name": "SnackbarSlotComponent",
            "id": "component-SnackbarSlotComponent-0fe8258e2cb30a84d9cf8d089af97fd48a4e541793ac0865259229662886759db7113544e7fc4c4ac8e1eff8534ab4abf7014a5b4db3e1fa95098d8dfb988716",
            "file": "src/app/components/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snack-bar-component-slot",
            "styleUrls": [
                "./snackbar.component.scss"
            ],
            "styles": [],
            "template": "{{ data }}",
            "templateUrl": [
                "snack-bar-component-slot.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_SNACK_BAR_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, Inject } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n  MAT_SNACK_BAR_DATA,\r\n} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.scss']\r\n})\r\nexport class SnackbarComponent implements OnChanges {\r\n  @Input() show: boolean = false;\r\n  @Input() message: string = 'Sua mensagem aqui';\r\n  @Input() theme: string = 'success-theme';\r\n  @Input() icon: string = 'fa fa-check-circle';\r\n  @Input() duration: number = 5000;\r\n  @Input() horizontalPosition: MatSnackBarHorizontalPosition = 'center';\r\n  @Input() verticalPosition: MatSnackBarVerticalPosition = 'bottom';\r\n\r\n  constructor(public snackBar: MatSnackBar) { }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.show) this.openSnackBar(\r\n      this.message,\r\n      this.duration,\r\n      this.theme,\r\n      this.icon,\r\n      this.horizontalPosition,\r\n      this.verticalPosition\r\n    )\r\n  }\r\n\r\n  openSnackBar(\r\n    message: string,\r\n    duration: number,\r\n    theme: string,\r\n    icon: string,\r\n    horizontalPosition: MatSnackBarHorizontalPosition,\r\n    verticalPosition: MatSnackBarVerticalPosition\r\n  ) {\r\n   this.snackBar.openFromComponent(SnackbarSlotComponent, {\r\n      duration,\r\n      panelClass: theme,\r\n      horizontalPosition,\r\n      verticalPosition,\r\n      data: {\r\n        message,\r\n        icon,\r\n        preClose: () => { this.snackBar.dismiss() }\r\n      }\r\n    });\r\n }\r\n}\r\n@Component({\r\n  selector: 'app-snack-bar-component-slot',\r\n  templateUrl: 'snack-bar-component-slot.html',\r\n  template: '{{ data }}',\r\n  styleUrls: ['./snackbar.component.scss'],\r\n})\r\nexport class SnackbarSlotComponent {  \r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  close() {\r\n    this.data.preClose()\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/scss/main';\r\n\r\n::ng-deep.mat-snack-bar-container {\r\n  max-width: 100% !important;\r\n  height: 56px !important;\r\n  border-radius: 5px;\r\n}\r\n  \r\n.snackbar {\r\n  &__slot {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    > div {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  &__slot--message {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  &__slot--action {\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n::ng-deep.success-theme,\r\n::ng-deep.error-theme,\r\n::ng-deep.info-theme,\r\n::ng-deep.warn-theme {\r\n  @include font-format(\r\n    $weight: 600,\r\n    $line-height: 24px,\r\n    $color: $white,\r\n    $size: 16px,\r\n  )\r\n}\r\n\r\n::ng-deep.success-theme {\r\n  background: #148735;\r\n}\r\n\r\n::ng-deep.error-theme {\r\n  background: $error;\r\n}\r\n\r\n::ng-deep.warn-theme {\r\n  background: #F19718;\r\n  \r\n}\r\n\r\n::ng-deep.info-theme {\r\n  background: $primary;\r\n}\r\n",
                    "styleUrl": "./snackbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 63,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"snackbar__slot\">\r\n  <div>\r\n    <div class=\"snackbar__slot--icon\">\r\n      <i [ngClass]=\"data.icon\"></i>\r\n    </div>\r\n  \r\n    <div class=\"snackbar__slot--message\">\r\n      {{ data.message }}\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"snackbar__slot--action\">\r\n    <i class=\"fa-light fa-xmark\" (click)=\"close()\"></i>\r\n  </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c1ab2d0e476e6d8584bd8f9ff9edc99eae99d5e3dfd82db66fbdb3273069deb97a11f72091cbd5154fc62d86bbd53e46212ed939eb04e8bb24b55e0bbf6b0507",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "// Core\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './views/app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Services axios\nimport { ExampleService } from './services/axios/index';\n\n// Services http request\nimport { httpInterceptorProviders } from './services/httpRequest/interceptor';\n\n// Router\nimport { AppRoutingModule } from './router/app-routing.module';\n\n// Libs\nimport { MaterialModule } from './plugins/material.module';\nimport { IMaskModule } from 'angular-imask';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Store\nimport { StateModule } from './store/store.module';\n\n// Views\nimport { LayoutComponent } from './views/layout/layout.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { NotfoundComponent } from './views/notfound/notfound.component';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { CustomLoaderComponent } from './components/custom-loader/custom-loader.component';\nimport { SnackbarModule } from './components/snackbar/snackbar.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HomeComponent,\n    NotfoundComponent,\n    HeaderComponent,\n    CustomLoaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    StateModule,\n    CommonModule,\n    IMaskModule,\n    CurrencyMaskModule,\n    FormsModule,\n    SnackbarModule,\n    HttpClientModule\n  ],\n  providers: [\n    ExampleService,\n    HttpClientModule,\n    httpInterceptorProviders,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CustomLoaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "NotfoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "SnackbarModule"
                        },
                        {
                            "name": "StateModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-cc04662eb66479cbcffcd22078c2a719bc5e7ff90466dca0e98951731852d49e275b17a33c193ad3707f1efae3eb7d975e5fa1a63f12baa4db63af5aa60aa1c3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/router/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guard';\n\n// Views\nimport { LayoutComponent } from '../views/layout/layout.component';\nimport { HomeComponent } from '../views/home/home.component';\nimport { NotfoundComponent } from '../views/notfound/notfound.component';\n\n// remove comment for use guard and login in your app\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    // canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n        // canActivate: [AuthGuard]\n      },\n      {\n        path: '404',\n        component: NotfoundComponent,\n      },\n      {\n        path: '**',\n        redirectTo: '/404',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoadingModule",
            "id": "module-LoadingModule-df0c094dd73fa0401a975626b027602607fdb597bf94f1e01f3537e29c870c2734ab4746a1c2b00bc5cd1a1900e4c348e2d4068557fd0f993eec6d78d5360aa2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/store/loading/loading.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [],\n})\nexport class LoadingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-2022467dd26648b749eff7c5063e6f5d5d0984f6e41b9c2ceec7c31e3e291f76ee7e32855ece68f4746fcb8ce90fafd16bb53cba8fa0fb0d65b2db250fc2ecc7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/plugins/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkAccordionModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n})\nexport class MaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SnackbarModule",
            "id": "module-SnackbarModule-500193f9e136844a5f24fdd2fa07fd54fec3a7444f86528da5a44e6b95f65a9a1205307ff5174dd30cd1c9724128110f323e504c8b7f5c228ccb10ff517ad292",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/snackbar/snackbar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { SnackbarComponent } from './snackbar.component';\r\nimport { SnackbarSlotComponent } from './snackbar.component';\r\nimport { MaterialModule } from '../../plugins/material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n@NgModule({\r\n    declarations: [\r\n        SnackbarComponent,\r\n        SnackbarSlotComponent\r\n    ],\r\n    imports: [\r\n        MaterialModule,\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n    ],\r\n    exports: [\r\n        SnackbarComponent\r\n    ]\r\n})\r\nexport class SnackbarModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SnackbarComponent"
                        },
                        {
                            "name": "SnackbarSlotComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SnackbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SnackbarStateModule",
            "id": "module-SnackbarStateModule-af14d99e97edca24c4e36653c91d192badbdc051cb326b7ee2e6df2a31fcf8a4ef0eef34b97b72fa5d559ad761fa69d90111eb35a9ad541123f067bcf1242944",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/store/snackbar/snackbar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [],\n})\nexport class SnackbarStateModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StateModule",
            "id": "module-StateModule-bf79ae764ac40279cebb40efa78d361635997d059794282a31dc716e2d876777f55e7583b5011397aea391d14c782d05b7daa27a6699ffde17de5f31743eb105",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/store/store.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { NgxsModule } from '@ngxs/store';\n\n// State\nimport { LoaderState } from './loading/loading.state';\nimport { LoadingModule } from './loading/loading.module';\nimport { SnackbarState } from './snackbar/snackbar.state';\nimport { SnackbarStateModule } from './snackbar/snackbar.module';\n\n@NgModule({\n  exports: [LoadingModule, SnackbarStateModule],\n  imports: [\n    NgxsModule.forRoot([LoaderState, SnackbarState], {\n      developmentMode: !environment.production,\n    }),\n  ],\n})\nexport class StateModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoadingModule"
                        },
                        {
                            "name": "SnackbarStateModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "axiosApiInstance",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/axios/http/interceptor.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "instance"
            },
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/custom-loader/custom-loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  envName: 'dev',\n  FAKE: 'https://randomuser.me/api/',\n  redirectLogin: '/login',\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "getCookie",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/GetTokenCookie.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(name: string) => {\n  const value = `; ${document.cookie}`;\n  const parts: any = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}"
            },
            {
                "name": "httpInterceptorProviders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/httpRequest/interceptor/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpInterceptorAuth,\n    multi: true,\n  },\n\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpInterceptorError,\n    multi: true,\n  },\n]"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "instance",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/axios/http/axios.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "axios.create()"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/custom-loader/custom-loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CustomLoaderComponent>",
                "defaultValue": "(args: CustomLoaderComponent) => ({\r\n  component: CustomLoaderComponent,\r\n  props: args,\r\n  template: `<app-custom-loader [brand]=\"brand\"></app-custom-loader>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SnackbarComponent>",
                "defaultValue": "(args: SnackbarComponent) => ({\r\n  component: SnackbarComponent,\r\n  props: args,\r\n  template: `<app-snackbar\r\n  [duration]=\"duration\"\r\n  [icon]=\"icon\"\r\n  [theme]=\"theme\"\r\n  [message]=\"message\"\r\n  [horizontalPosition]=\"horizontalPosition\"\r\n  [verticalPosition]=\"verticalPosition\"\r\n  [show]=\"show\"\r\n></app-snackbar>`,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Methods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"head\" | \"options\" | \"put\" | \"post\" | \"patch\" | \"delete\" | \"get\"",
                "file": "src/app/services/axios/plugins/request.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Methods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"head\" | \"options\" | \"put\" | \"post\" | \"patch\" | \"delete\" | \"get\"",
                "file": "src/app/services/axios/plugins/requestInterceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/services/axios/http/interceptor.service.ts": [
                {
                    "name": "axiosApiInstance",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/axios/http/interceptor.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "instance"
                }
            ],
            "src/stories/custom-loader/custom-loader.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/custom-loader/custom-loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/custom-loader/custom-loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CustomLoaderComponent>",
                    "defaultValue": "(args: CustomLoaderComponent) => ({\r\n  component: CustomLoaderComponent,\r\n  props: args,\r\n  template: `<app-custom-loader [brand]=\"brand\"></app-custom-loader>`,\r\n})"
                }
            ],
            "src/stories/snackbar/snackbar.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SnackbarComponent>",
                    "defaultValue": "(args: SnackbarComponent) => ({\r\n  component: SnackbarComponent,\r\n  props: args,\r\n  template: `<app-snackbar\r\n  [duration]=\"duration\"\r\n  [icon]=\"icon\"\r\n  [theme]=\"theme\"\r\n  [message]=\"message\"\r\n  [horizontalPosition]=\"horizontalPosition\"\r\n  [verticalPosition]=\"verticalPosition\"\r\n  [show]=\"show\"\r\n></app-snackbar>`,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  envName: 'dev',\n  FAKE: 'https://randomuser.me/api/',\n  redirectLogin: '/login',\n}"
                }
            ],
            "src/app/utils/GetTokenCookie.utils.ts": [
                {
                    "name": "getCookie",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/GetTokenCookie.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(name: string) => {\n  const value = `; ${document.cookie}`;\n  const parts: any = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}"
                }
            ],
            "src/app/services/httpRequest/interceptor/index.ts": [
                {
                    "name": "httpInterceptorProviders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/httpRequest/interceptor/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpInterceptorAuth,\n    multi: true,\n  },\n\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpInterceptorError,\n    multi: true,\n  },\n]"
                }
            ],
            "src/app/services/axios/http/axios.service.ts": [
                {
                    "name": "instance",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/axios/http/axios.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "axios.create()"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/services/axios/plugins/request.ts": [
                {
                    "name": "Methods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"head\" | \"options\" | \"put\" | \"post\" | \"patch\" | \"delete\" | \"get\"",
                    "file": "src/app/services/axios/plugins/request.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/services/axios/plugins/requestInterceptor.ts": [
                {
                    "name": "Methods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"head\" | \"options\" | \"put\" | \"post\" | \"patch\" | \"delete\" | \"get\"",
                    "file": "src/app/services/axios/plugins/requestInterceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/router/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "LayoutComponent",
                        "children": [
                            {
                                "path": "",
                                "component": "HomeComponent"
                            },
                            {
                                "path": "404",
                                "component": "NotfoundComponent"
                            },
                            {
                                "path": "**",
                                "redirectTo": "/404"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/components/custom-loader/custom-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarSlotComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/router/guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/axios/example/example.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ExampleService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/axios/http/axios.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "instance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/axios/http/interceptor.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "axiosApiInstance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/httpRequest/example-http.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ExampleHttpService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/httpRequest/interceptor/error-interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpInterceptorError",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/httpRequest/interceptor/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpInterceptorProviders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/httpRequest/interceptor/success-interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpInterceptorAuth",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading/loading.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChangeLoaderState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading/loading.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoaderSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading/loading.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoaderState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading/loading.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoaderStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/snackbar/snackbar.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChangeSnackbarState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/snackbar/snackbar.selectors.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SnackbarSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/snackbar/snackbar.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SnackbarState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/snackbar/snackbar.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SnackbarStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/GetTokenCookie.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCookie",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/views/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/views/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/views/notfound/notfound.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotfoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/custom-loader/custom-loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/custom-loader/custom-loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}